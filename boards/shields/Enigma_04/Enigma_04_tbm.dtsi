#include <dt-bindings/zmk/matrix_transform.h>
#include "Enigma_04_tbm_layouts.dtsi"

/ {
    chosen {
        zmk,kscan = &kscan_tbm0;
        zmk,studio-rpc = &studio_usb;
    };
  
    transform_tbm0: transform_tbm0 {
        compatible = "zmk,matrix-transform";
        columns = <5>;
        rows = <4>;               
        map = <
                  RC(0,1) RC(0,2) RC(0,3) RC(0,4)
          RC(3,0) RC(1,0) RC(1,2) RC(1,3) RC(1,4)
          RC(3,1) RC(2,0) RC(2,1) RC(2,3) RC(2,4)
        >;
    };

    transform_tbm1: transform_tbm1 {
        compatible = "zmk,matrix-transform";
        columns = <5>;
        rows = <4>;               
        map = <
                                  RC(0,3) RC(0,4)
          RC(3,0)                 RC(1,3) RC(1,4)
          RC(3,1) RC(2,0) RC(2,1) RC(2,3) RC(2,4)
        >;
    };

    transform_tbm2: transform_tbm2 {
        compatible = "zmk,matrix-transform";
        columns = <5>;
        rows = <4>;               
        map = <
            RC(0,4) RC(0,3) RC(0,2) RC(0,1)
            RC(1,4) RC(1,3) RC(1,2) RC(1,0) RC(3,0)
            RC(2,4) RC(2,3) RC(2,1) RC(2,0) RC(3,1)
        >;
    };

    transform_tbm3: transform_tbm3 {
        compatible = "zmk,matrix-transform";
        columns = <5>;
        rows = <4>;               
        map = <
            RC(0,4) RC(0,3)
            RC(1,4) RC(1,3)                 RC(3,0)
            RC(2,4) RC(2,3) RC(2,1) RC(2,0) RC(3,1)
        >;
    };

    kscan_tbm0: kscan_tbm0 {
        compatible = "zmk,kscan-gpio-charlieplex";
        interrupt-gpios = <&gpio (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
                gpios = <&gpio GPIO_ACTIVE_HIGH>,
                <&gpio GPIO_ACTIVE_HIGH>,
                <&gpio GPIO_ACTIVE_HIGH>,
                <&gpio GPIO_ACTIVE_HIGH>,
                <&gpio GPIO_ACTIVE_HIGH>;
    };

    studio_usb: studio_usb {
        compatible = "zmk,studio-rpc-usb-uart";
    };
};

&pinctrl {
    spi0_default: spi0_default {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 5)>, //SCLK
                    <NRF_PSEL(SPIM_MOSI, 0, 4)>, //SDIO
                    <NRF_PSEL(SPIM_MISO, 0, 4)>; //SDIO
        };
    };

    spi0_sleep: spi0_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 5)>, //SCLK
                    <NRF_PSEL(SPIM_MOSI, 0, 4)>, //SDIO
                    <NRF_PSEL(SPIM_MISO, 0, 4)>; //SDIO
            low-power-enable;
        };
    };
};